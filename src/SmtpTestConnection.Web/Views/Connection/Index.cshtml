@using SmtpTestConnection.Web.Startup
@model ConnectionModel
@{
    ViewBag.ActiveMenu = PageNames.Connect;
    var failedVal = ViewBag.FailedValidation != null ? bool.Parse(ViewBag.FailedValidation) : false;
}

@section scripts
{
    <environment names="Development">
        <script src="~/js/views/home/index.js"></script>
    </environment>

    <environment names="Staging,Production">
        <script src="~/js/views/home/index.min.js"></script>
    </environment>
}

<div class="row">
    <br /><br /><br />
    <h4>@L("Connect_Description")</h4>
    @if (failedVal)
    {
        <div class="alert alert-danger" role="alert">
            <span>&#128577;</span> Email and Password must be supplied <span>&#128577;</span>
        </div>
    }
    <form asp-action="Index">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="Email" class="control-label"></label>
            <input asp-for="Email" class="form-control" />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Password" class="control-label"></label>
            <input asp-for="Password" class="form-control" />
            <span asp-validation-for="Password" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Domain" class="control-label"></label>
            <input asp-for="Domain" class="form-control" />
            <span asp-validation-for="Domain" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Port" class="control-label"></label>
            <input asp-for="Port" type="text" class="form-control" />
        </div>
        <div class="form-group">
            <input type="submit" value="Test Connection" class="btn btn-primary" />
        </div>
    </form>
    @*</div>*@
</div>
<div class="row">
    <div class="col-lg-12">
        @L(DateTime.Now.ToString("D"))
    </div>
</div>




@*@model SmtpTestConnection.Web.ViewModel.ConnectionModel

    @{
        ViewData["Title"] = "Index";
    }*@

<!--<div class="row">
    <h3>Welcome!</h3>
    <h5>Test your SMTP settings here. Once connection is successful you can use this details in your application</h5>
    <hr />-->
@*<div class="visible-lg col-lg-1"></div>*@
<!--<div class="col-lg-8 col-sm-12">
    <form asp-action="Index">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="Email" class="control-label"></label>
            <input asp-for="Email" class="form-control" />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Password" class="control-label"></label>
            <input asp-for="Password" class="form-control" />
            <span asp-validation-for="Password" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Domain" class="control-label"></label>
            <input asp-for="Domain" class="form-control" />
            <span asp-validation-for="Domain" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Port" class="control-label"></label>
            <input asp-for="Port" class="form-control" />
            <span asp-validation-for="Port" class="text-danger"></span>
        </div>
        <div class="form-group">
            <div class="checkbox">
                <label>
                    <input asp-for="IsAuth" /> @*@Html.DisplayNameFor(model => model.IsAuth)*@
                </label>
            </div>
        </div>
        <div class="form-group">
            <input type="submit" value="Test Connection" class="btn btn-primary" />
        </div>
    </form>
</div>-->
@* <div class="visible-lg col-lg-1"></div>*@

@*</div>*@

@*@section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }*@
